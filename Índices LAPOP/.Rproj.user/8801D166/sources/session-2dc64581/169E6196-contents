# Cargar los paquetes necesarios
library(plotly)
library(dplyr)

# Convertir "Ola" y "Valor" a numéricos
df$Ola <- as.numeric(df$Ola)
df$Valor <- as.numeric(gsub(",", ".", df$Valor))

# Crear traza vacía
p <- plot_ly()

# Crear una lista para almacenar la información de las trazas
traza_info <- list()

# Crear un vector de colores
colores <- colorRampPalette(c("red", "blue", "green"))(length(unique(df$País)))

# Asignar un color a cada país
colores_paises <- setNames(colores, unique(df$País))

# Crear un trazado por cada combinación de País y Variable
for(pais in unique(df$País)){
  for(variable in unique(df$Variable)){
    temp_df <- df %>% filter(País == pais, Variable == variable)
    
    if(nrow(temp_df) > 0){ # Solo crear un trazado si hay datos
      p <- add_trace(
        p,
        x = temp_df$Ola,
        y = temp_df$Valor,
        name = pais,
        type = 'scatter',
        mode = 'lines',
        legendgroup = pais,
        showlegend = ifelse(variable == unique(df$Variable)[1], T, F),
        line = list(color = colores_paises[pais]),
        visible = ifelse(variable == unique(df$Variable)[1], TRUE, "legendonly"),
        hovertemplate = paste("País: ", pais, 
                              "<br>Variable: ", variable, 
                              "<br>Ola: %{x}<br>Valor: %{y}<extra></extra>")
      )
      
      traza_info[[length(traza_info) + 1]] <- list(pais = pais, variable = variable)
    }
  }
}

# Crear el menú desplegable
updatemenus <- list(
  list(
    active = 0,
    buttons = lapply(unique(df$Variable), function(variable) {
      list(
        method = 'restyle',
        args = list('visible', 
                    sapply(1:length(traza_info), function(i) {
                      ifelse(traza_info[[i]]$variable == variable, TRUE, "legendonly")
                    })),
        label = variable
      )
    })
  )
)

# Crear el gráfico final
p <- p %>% layout(title = "Valores por Ola y País", updatemenus = updatemenus)

# Mostrar el gráfico
p
