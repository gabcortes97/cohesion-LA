---
title: 'Construcción índices de Cohesión Social para América Latina'
subtitle: 'A partir de datos LAPOP, Latinbarómetro y WVS.'
author: "Observatorio de Cohesión Social (OCS) - COES"
format:
  html:
    embed-resources: true
    page-layout: full
    toc: true
    toc-depth: 3
    number-sections: true
    number-depth: 2
    theme:
      light: cosmo
      dark: [cosmo, theme-dark.scss]
    #css: style.css
lang: es
title-block-banner: true
#title-block-banner-color: "#72CBE5"
execute:
  echo: false
comments:
   hypothesis: true
date: '2023-06-12'
#date-format: short
editor_options: 
  chunk_output_type: console
---

El presente informe tiene por objetivo describir la
construcción de índices de cohesión social para
Latinoamerica en el periodo 2004-2021. Con este fin, se
utilizarán datos provenientes de las encuestas LAPOP,
Latinbarómetro y de la Encuesta Mundial de Valores (WVS). A
continuación se describen los datos.

# Datos

## LAPOP

La encuesta LAPOP, que significa "Latin American Public
Opinion Project" (Proyecto de Opinión Pública
Latinoamericana), es una iniciativa de investigación que
tiene como objetivo medir y analizar las actitudes y
opiniones de los ciudadanos en América Latina y el Caribe.
Fue establecida en 2004 por la Universidad de Vanderbilt en
los Estados Unidos y ha llevado a cabo varias rondas de
encuestas en la región desde entonces.

La encuesta LAPOP utiliza una metodología estandarizada para
recopilar datos sobre una amplia gama de temas, incluyendo
la democracia, la gobernabilidad, la corrupción, la
seguridad ciudadana, la justicia, la participación política,
los derechos humanos y la desigualdad social. Se basa en
entrevistas cara a cara con una muestra representativa de la
población en cada país participante.

Uno de los aspectos destacados de la encuesta LAPOP es su
enfoque comparativo, que permite analizar las tendencias y
diferencias en la opinión pública entre los países de la
región. Los resultados de la encuesta se utilizan para
informar a académicos, responsables de políticas y
organizaciones internacionales sobre la situación
socio-política en América Latina, y se han convertido en una
fuente importante de información y análisis en el campo de
los estudios latinoamericanos.

La encuesta ha desempeñado un papel importante en la
comprensión de los desafíos y las dinámicas de la democracia
en la región, así como en el diseño de políticas públicas
orientadas a fortalecer la gobernabilidad y mejorar la
calidad de vida de los ciudadanos en América Latina y el
Caribe. Sus resultados han sido ampliamente citados y
utilizados en investigaciones académicas, informes de
desarrollo y debates políticos en la región.

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE,message=FALSE)

```

```{r Carga de librerías, include=FALSE}
# Descargar paquetes. 

if (!require("pacman")) install.packages("pacman")
# remotes::install_github("nset-ornl/wbstats")
pacman::p_load(tidyverse,sjlabelled,countrycode,haven,questionr,wbstats,zoo,
               sjPlot,sjmisc,dplyr,summarytools,flextable,data.table)


#options(scipen=999)
#rm(list=ls())
st_options(lang='es')
options(OutDec=",")

```

```{r Carga de datos, warning=FALSE,message=FALSE, include = FALSE, cache=TRUE}
vars_hor <- c("b4","b43",
          "it1",
          "aoj11","sd2new2","sd3new2","sd6new2","colaoj21a","vicbar1","vicbar3","vicbar7","jamb18a",
          "cp8")
vars_ver <- c("b21a","b21","b18","b23","b10a","b39n","b13",
              "pn4","b4","nicfear","prot3",
              "pol1","vb2",
              "movus1")
vars <- c("wave","year","pais",vars_hor,vars_ver)

load(file = "../input/data/original/GrandMerge.RData") 
load(file="../input/data/original/LAPOP_2004-2008.RData") # datos0418

dta <- list.files(path = "../input/data/original/lapop-faltantes/", pattern = ".dta")
dta <- paste0(file = "../input/data/original/lapop-faltantes/",dta)

merge_faltante <- lapply(dta, function(archivo){
  print(archivo)
  df <- read_dta(archivo)
  df <- df %>% select_if(names(df) %in% vars) %>% mutate(
    wave = substr(archivo,nchar(archivo)-7,nchar(archivo)-4)
  ) 
  return(df)
})

rm(dta)
merge_faltante <- bind_rows(merge_faltante)

dta<- list.files(path = "../input/data/original/LAPOP2021/", pattern = ".dta")
dta <- paste0(file = "../input/data/original/LAPOP2021/",dta)

data2021 <- lapply(dta, function(archivo){
  print(archivo)
  df <- read_dta(archivo)
  df <- df %>% select_if(names(df) %in% vars)
  return(df)
})
data2021 <- bind_rows(data2021)
rm(dta)


  datos0418 <- datos0418 %>% select_if(names(datos0418) %in% vars)

# datos0418 <-  datos0418  %>%  
#                         select(wave, year, pais, idnum, upm, 
#                               strata, wt, weight1500, estratopri,
#                               estratosec, ur, tamano, prov, cluster,
#                               it1, prot3, aoj12, b2, b3, b4,
#                               b10a, b12, b20, b20a, b21, b21a,
#                               n9, n11, n15, ros4, ing4,
#                               eff1, pn4, exc7, pol1, vb2) # Selección variables de interes

datos1618 <-  datos0418  %>% filter(wave==2016 | wave==2018)


# datos1618$pr4 <- NA # Crear variable pr4 para juntar las bases
datos1618$wave <- as.numeric(datos1618$wave)


names(datos) # para saber el orden de las variables
 
datos$wave <- NA

datosselc <- datos %>% select_if(names(datos) %in% vars)


# datosselc <-  datos  %>% select(wave, year, pais, idnum, upm, strata, wt, weight1500, estratopri,
#                          estratosec, ur, tamano, prov, cluster,
#                          it1, prot3, aoj12, b2, b3, b4,
#                          b10a, b12, b20, b20a, b21, b21a,
#                          n9, n11, n15, ros4, ing4,
#                          eff1, pn4, exc7, pol1, vb2, pr4) # wave

# Evaluar la relación entre olas y agnos

table(datosselc$year) 
table(datos0418$wave)
table(data2021$wave)

# Los casos se ordenan de tal modo wave(olas): 
# 2004(2014), 2006(2006 y 2007),  2008(2008 y 2009), 2010(2010), 2012(2012), 2014(2014), 2016(16,17), 2018(18,19)

datosselc$wave <- ifelse(datosselc$year==2006 | datosselc$year==2007, 2006, NA)
datosselc$wave <- ifelse(datosselc$year==2004 , 2004, datosselc$wave)
datosselc$wave <- ifelse(datosselc$year==2008 | datosselc$year==2009, 2008, datosselc$wave)
datosselc$wave <- ifelse(datosselc$year==2010, 2010, datosselc$wave)
datosselc$wave <- ifelse(datosselc$year==2012, 2012, datosselc$wave)
datosselc$wave <- ifelse(datosselc$year==2014, 2014, datosselc$wave)

datosselc <- remove_all_labels(datosselc) # Las etiquetas no son compatibles
merge_faltante <- mutate_all(merge_faltante, as.numeric)
merge_faltante$year <- merge_faltante$wave

data2021 <- mutate_all(data2021, as.numeric)
data2021$year <- data2021$wave

# Merge 2004-2014 + 2018 +faltantes varias del grand merge + 2021
datos <- bind_rows(datosselc,datos1618,merge_faltante,data2021) # logra una base longitudinal con la pr4 incluida. 
datos <- copy_labels(datos, datos0418)
rm(list = setdiff(ls(),c("datos","vars","vars_hor","vars_ver")))
datos_label <- to_label(datos)
datos$pais<-datos_label$pais



standardize_data <- function(df, exclude_cols = NULL) {
  cols <- setdiff(names(df)[sapply(df, is.numeric)], exclude_cols)
  for(col in cols) {
    old_min <- min(df[[col]], na.rm = TRUE)
    old_max <- max(df[[col]], na.rm = TRUE)
    new_min <- 0
    new_max <- 10
    df[[col]] <- ifelse(!is.na(df[[col]]), ((df[[col]] - old_min) / (old_max - old_min)) * 
                        (new_max - new_min) + new_min, NA)
  }
  return(df)
}

# Especifica las columnas para excluir
exclude_cols = c("wave", "pais")

# Estandariza los datos
prom_wave <- standardize_data(datos, exclude_cols)




prom_wave <- prom_wave %>% group_by(wave,pais) %>% summarise_if(is.numeric, mean, na.rm = TRUE)

```

```{r, results='asis'}

datos_sin_agrupar <- ungroup(prom_wave)

# Convertir a data.frame
prom_wave <- as.data.frame(datos_sin_agrupar)

prom_wave <- copy_labels(prom_wave, datos_label)

prom_wave$movus1 <- set_label(prom_wave$movus1, "Movilidad económica")
prom_wave$jamb18a <- set_label(prom_wave$jamb18a, "Confianza en la policía del barrio")
prom_wave$b39n <- set_label(prom_wave$b39n, "¿Hasta qué punto tiene usted confianza en el sector privado?")

resumen_lapop <-dfSummary(prom_wave,
                headings=FALSE,
                method = 'render',
                style = "grid",
                plain.ascii = FALSE,
                tmp.img.dir = 'tmp',
                varnumbers = FALSE,
                silent= TRUE,  split.by = NULL)

```

### Paises por cada ola

La encuesta LAPOP investiga América Latina y el Caribe,
recopilando datos sobre actitudes y opiniones de los
ciudadanos. Su objetivo es analizar temas como democracia,
gobernabilidad, corrupción, seguridad ciudadana,
participación política, derechos humanos y desigualdad
social. A través de entrevistas cara a cara, proporciona
información comparativa entre los países de la región,
informando a académicos, responsables de políticas y
organizaciones internacionales. Su fin es comprender los
desafíos de la democracia y fortalecer la gobernabilidad,
influyendo en el diseño de políticas públicas y mejorando la
calidad de vida en América Latina y el Caribe.

A continuación se presentan los paises incluidos por olas:

```{r}
tabla <- table(prom_wave$pais, prom_wave$wave) %>%
  as.data.frame.matrix()

tabla <- tabla %>%
  filter(!rowSums(tabla) == 0)

tabla<-tabla[sort(rownames(tabla)),]%>%
  rbind(colSums(.)) %>%
  rownames_to_column("País")

tabla$País[nrow(tabla)] <- "Total"

for (col in names(tabla)) {
  tabla[[col]] <- ifelse(tabla[[col]] == 1, '✅ ', tabla[[col]])
}

for (col in names(tabla)) {
  tabla[[col]] <- ifelse(tabla[[col]] == 0, '❌', tabla[[col]])
}


tabla%>%
  flextable() %>%
    theme_alafoli()%>%
   autofit() %>%
  bold(i = 26)
  # align(align = "center", part = "all") %>% 
  # bg(bg = "#2a2a2a", part = "header") %>% 
  # color(color = "white", part = "header")
```

### Variables de interés LAPOP

Se han seleccionado una serie de variables que resultan
acordes al objetivo de este trabajo, la confección de
índices de cohesión social para América Latina. A partir de
esta revisión se determinará si son aptas para su
utilización. **Todas las variables a utilizar fueron
re-escaladas con límites 0 a 10**.

```{r,results='asis'}
print(resumen_lapop)
```

```{r}

review <- data.frame()
for( i in colnames(prom_wave)){
  tabla_frecuencia <- prom_wave %>%  
  count(pais,wave, is.na(!!sym(i))) %>%
    setNames(c("pais","wave","is_na","n"))%>%
  complete(pais, wave, is_na, fill = list(n = 0)) %>%
  group_by(pais,wave) %>% mutate(percent= n/sum(n), var=as.character(i), label = as.character(get_label(prom_wave)[i]))
  tabla_frecuencia$percent[is.na(tabla_frecuencia$percent)]<-0
  
  
  tabla_frecuencia <- tabla_frecuencia[tabla_frecuencia[, 3] == FALSE, c(1, 2, 4,5,6,7)]
  tabla_frecuencia$pais <- as_label(tabla_frecuencia$pais)
  var <- as.character(get_label(prom_wave)[i])
  review<-rbind(review,tabla_frecuencia)
}

  # 
  # 
  # plot<-ggplot(tabla_frecuencia, aes(x = wave, y = percent, color=pais,group=pais)) +
  # geom_point() +
  # geom_line() +
  # # geom_smooth(method = "lm", se = TRUE)+
  # # theme_minimal()+
  # ggtitle(paste0(' % Casos válidos. Var: ', var))+
  # labs(
  #   x = "Ola",
  #   y = "Frecuencia relativa",
  #   #color = "Tasa homofilia",
  #   subtitle = "Frecuencia relativa de casos.",
  #   caption = paste("Datos LAPOP."))+
  # theme(legend.position='bottom',
  #       #text=element_text(family=font_ggplot),
  #       plot.title = element_text(face="bold"),
  #       legend.title = element_text(
  #                                   #size=size_title_legend,
  #                                   face = "bold"
  #       ), 
  #       #legend.text = element_text(size=size_text_legend),
  #       #legend.key.width = unit(size_key_legend, 'cm'),
  # ) + coord_cartesian(ylim = c(0, NA))
  # print(plot)


  review_summary <- review %>% group_by(label,wave) %>%
  summarise(presencia = sum(percent>0)/25,
            n_valid = sum(percent>0))

plot<-ggplot(review_summary, aes(x = wave, y = presencia, color=label,group=label)) +
  geom_point() +
  geom_line() +
  # geom_smooth(method = "lm", se = TRUE)+
  theme_minimal()+
  ggtitle(paste0('Proporción paises con dato para: ', as.character(get_label(merge)[i])))+
  labs(
    x = "Ola",
    y = "Frecuencia relativa",
    #color = "Tasa homofilia",
    subtitle = "Frecuencia relativa de casos",
    caption = paste("Datos LAPOP."))+
  theme(legend.position='bottom',
        #text=element_text(family=font_ggplot),
        plot.title = element_text(face="bold"),
        legend.title = element_text(
                                    #size=size_title_legend,
                                    face = "bold"
        ), 
        #legend.text = element_text(size=size_text_legend),
        #legend.key.width = unit(size_key_legend, 'cm'),
  ) + coord_cartesian(ylim = c(0, NA))

library(plotly)
ggplotly(plot)
```

```{r,message=FALSE}

review_summary_pais_wave <- review %>% group_by(pais,wave)%>%
filter(!var %in% c('wave',"pais","year"))%>%
  filter(!pais %in% c("Suriname","Bahamas","Barbados","Grenada","Saint Lucia","Dominica","Saint Vincent and the Grenadines","Saint Kitts and Nevis"))%>%
  filter(wave != 2021)%>%
  summarise(presencia = sum(percent>0)/25,
            n_valid = sum(percent>0))
```

A partir de la revisión anterior se ha determinado la
exclusión de las variables:

-   Pride in Nationality (b43) presente en solo el **12.7%**
    de los países-años.
-   Groups that Guarantee Neighborhood Safety (colaoj21a)
    presente en solo el **1%** de los países-años.
-   Burglaries in the Neighborhood (vicbar1) presente en
    solo el **14.2%** de los países-años.
-   Sales of Illegal Drugs in the Neighborhood () presente
    en solo el **14.2%** de los países-años.
-   Murders in the Neighborhood (vicbar7) presente en solo
    el **18.3%** de los países-años.
-   Confianza en la policía del barrio (jamb18a) presente en
    solo el **0.5%** de los países-años.
-   Trust in Unions (b23) presente en solo el **0.5%** de
    los países-años.
-   ¿Hasta qué punto tiene usted confianza en el sector
    privado? (b39n) presente en solo el **0.5%** de los
    países-años.
-   Attitude towards Political Discussions (nicfear)
    presente en solo el **1.5%** de los países-años.
-   Movilidad económica (movus1) presente en solo el
    **0.5%** de los países-años.

Debido a la baja presencia de las variables de interés en
los datos del 2021 se trabajará tomando como límite la ola
2018.

```{r, message=FALSE}


review$label[review$var=='b39n']<-'Confianza en el sector privado.'

plot<-ggplot(review_summary_pais_wave, aes(x = wave, y = presencia, color=pais,group=pais)) +
  geom_point() +
  geom_line() +
  # geom_smooth(method = "lm", se = TRUE)+
  theme_minimal()+
  ggtitle(paste0('Proporción de variables disponibles por país y ola', as.character(get_label(merge)[i])))+
  labs(
    x = "Ola",
    y = "Frecuencia relativa",
    #color = "Tasa homofilia",
    subtitle = "Frecuencia relativa de casos",
    caption = paste("Datos LAPOP."))+
  theme(legend.position='bottom',
        #text=element_text(family=font_ggplot),
        plot.title = element_text(face="bold"),
        legend.title = element_text(
                                    #size=size_title_legend,
                                    face = "bold"
        ), 
        #legend.text = element_text(size=size_text_legend),
        #legend.key.width = unit(size_key_legend, 'cm'),
  ) + coord_cartesian(ylim = c(0, NA))

library(plotly)
ggplotly(plot)
```

### Imputación

Al revisar las primeras filas del dataset se constata la
existencia de datos pedidos en las variables de interés.

```{r}
# include=FALSE,message=FALSE
prom <- prom_wave[order(prom_wave$pais),] %>%
        filter(!pais %in% c("Suriname","Bahamas","Barbados","Grenada","Saint Lucia","Dominica","Saint Vincent and the     Grenadines","Saint Kitts and Nevis"))%>%
  filter(wave != 2021) %>%
  select(-c(year,b43,colaoj21a,vicbar1,vicbar3,vicbar7,jamb18a,b23,b39n,nicfear,movus1))

prom %>%
  head(16)%>%
  mutate(wave = as.factor(wave))%>%
  # replace(is.na(prom), "NA")%>%
  flextable() %>%
  theme_alafoli() %>%
  autofit() %>% 
  # colformat_num(big.mark = "",decimal.mark = ",", digits = 1) %>% 
  colformat_double(big.mark = "",decimal.mark = ",", digits = 1,
                   na_str = "NA",
  nan_str = "NA",)%>%
  align(align = "center", part = "all") %>% 
  bg(i = ~ is.na(prot3) ,j=~ prot3, bg = "#E73C6D") %>%
  color(i = ~ is.na(prot3),j=~ prot3, color='white')%>%
  
  bg(i = ~ is.na(sd2new2) ,j=~ sd2new2, bg = "#E73C6D") %>%
  color(i = ~ is.na(sd2new2),j=~ sd2new2, color='white')%>%

bg(i = ~ is.na(sd3new2) ,j=~ sd3new2, bg = "#E73C6D") %>%
  color(i = ~ is.na(sd3new2),j=~ sd3new2, color='white')%>%

bg(i = ~ is.na(sd6new2) ,j=~ sd6new2, bg = "#E73C6D") %>%
  color(i = ~ is.na(sd6new2),j=~ sd6new2, color='white')%>%

bg(i = ~ is.na(pol1) ,j=~ pol1, bg = "#E73C6D") %>%
  color(i = ~ is.na(pol1),j=~ pol1, color='white')%>%

bg(i = ~ is.na(b21a) ,j=~ b21a, bg = "#E73C6D") %>%
  color(i = ~ is.na(b21a),j=~ b21a, color='white')
```

Ante esto, se realiza una estrategia de imputación que
utilice las medias más cercanas en el tiempo. Se tiene por
límite hasta 3 olas, y en un segundo paso, hasta 3
olas posteriores. A continuación se presenta el resultado de
la imputación en las primeras filas.

```{r}
# , include=FALSE,message=FALSE

impute_data <- function(df, var) {
  df %>% 
    group_by(pais) %>% 
    mutate(
      temp = ifelse(is.na(!!sym(var)), lag(!!sym(var), 1), !!sym(var)), 
      temp = ifelse(is.na(temp), lag(temp, 1), temp),
       temp = ifelse(is.na(temp), lag(temp, 1), temp),
      temp = ifelse(is.na(temp), lead(temp, 1), temp),
      temp = ifelse(is.na(temp), lead(temp, 1), temp),
      temp = ifelse(is.na(temp), lead(temp, 1), temp),
      !!var := ifelse(is.na(!!sym(var)), temp, !!sym(var))
    ) %>% 
    select(-temp) -> df
  return(df)
}

numeric_vars <- names(prom)[sapply(prom, is.numeric)]
numeric_vars <- setdiff(numeric_vars, "wave")

for(var in numeric_vars){
  prom <- impute_data(prom, var)
}

prom %>%
  head(16)%>%
  mutate(wave = as.factor(wave))%>%
  # replace(is.na(prom), "NA")%>%
  flextable() %>%
  theme_alafoli() %>%
  autofit() %>% 
  # colformat_num(big.mark = "",decimal.mark = ",", digits = 1) %>% 
  align(align = "center", part = "all") %>%
  colformat_double(big.mark = "",decimal.mark = ",", digits = 1,
                   na_str = "NA",
  nan_str = "NA",) %>%
  bg(i = ~ is.na(sd2new2) ,j=~ sd2new2, bg = "#E73C6D") %>%
  color(i = ~ is.na(sd2new2),j=~ sd2new2, color='white')%>%

bg(i = ~ is.na(sd3new2) ,j=~ sd3new2, bg = "#E73C6D") %>%
  color(i = ~ is.na(sd3new2),j=~ sd3new2, color='white')%>%

bg(i = ~ is.na(sd6new2) ,j=~ sd6new2, bg = "#E73C6D") %>%
  color(i = ~ is.na(sd6new2),j=~ sd6new2, color='white')%>%

  bg(i = c(1:3,9:11) ,j=~ prot3, bg = "#66B16A") %>%
  color(i = c(1:3,9:11),j=~ prot3, color='white')%>%  

  bg(i = c(1:2,9:10) ,j=~ b21a, bg = "#66B16A") %>%
  color(i = c(1:2,9:10),j=~ b21a, color='white')%>%  
    
  bg(i = c(2:4,10:12) ,j=~ sd2new2, bg = "#66B16A") %>%
  color(i = c(2:4,10:12),j=~ sd2new2, color='white')%>%
  
    bg(i = c(2:4,10:12) ,j=~ sd3new2, bg = "#66B16A") %>%
  color(i = c(2:4,10:12),j=~ sd3new2, color='white')%>%
  
    bg(i = c(2:4,10:12) ,j=~ sd6new2, bg = "#66B16A") %>%
  color(i = c(2:4,10:12),j=~ sd6new2, color='white')%>%
  
    bg(i = c(1,9) ,j=~ pol1, bg = "#66B16A") %>%
  color(i = c(1,9),j=~ pol1, color='white')

data_lapop <- prom
saveRDS(data_lapop,"data_lapop.rds")
```

De este modo, las únicas variables que mantendrían casos
perdidos corresponderían a *Satisfaction with Roads*
(`sd2new2`), *Satisfaction with Public Schools* (`sd3new2`)
y *Satisfaction with Public Medical and Health Services*
(`sd6new2`) con 10,9% del total, para cada una.

```{r,eval=FALSE}
prop_casos_perdidos <- function(variable) {
  prop <- round(sum(is.na(variable)) / length(variable) *100,1)
  return(prop)
}

# Crear la tabla de proporción de casos perdidos por variable
tabla_prop_perdidos <- data.frame(
  Variable = colnames(prom),
  Proporcion_Casos_Perdidos = sapply(prom, prop_casos_perdidos)
)%>%t()

```

## Latinobarómetro

Latinobarómetro es un estudio de opinión pública que se lleva a cabo anualmente en América Latina desde 1995. Su objetivo principal es medir y analizar las actitudes, creencias y valores de los ciudadanos en la región.

El estudio utiliza una metodología de encuestas de opinión aplicadas a una muestra representativa de la población adulta en 18 países latinoamericanos. Las encuestas se basan en cuestionarios estructurados y abordan una amplia gama de temas, como la democracia, la economía, la política, la confianza en las instituciones, la religión, la identidad y otros asuntos sociales.

### Paises por cada ola

Las olas originales son recodificadas según años pares (por ej. 2017 pasa a incluirse a 2016) a modo de equiparar los periodos a los de la Encuesta LAPOP, que se por base. Así, se incluye en el análisis 8 olas que contienen la totalidad de los países estudiados en cada iteración.

```{r Carga de datos latinbarometro, warning=FALSE,message=FALSE, include = FALSE, cache=TRUE}

# # "../../Latinobarometro/Latinobarometro_2015.sav"
# d2018 <- read_sav("../../Latinobarometro/Latinobarometro_2018.sav")
# d2015 <- read_sav("../../Latinobarometro/Latinobarometro_2015.sav")
# 
# d2004 <- read_sav("../../Latinobarometro/Latinobarometro_2004.sav")
# d2005 <- read_sav("../../Latinobarometro/Latinobarometro_2005.sav")
# test <- rbind(d2004,d2005)

redistribucion<- data.frame(
    variable =c("p17st","p26st.e","p14st","P12ST","P12ST","P27ST","P18ST","P21ST","P20ST","P23ST"),
           año=c(2007,2008,2009,2010,2011,2013,2015,2016,2017,2018),
           descripcion=NA,
           standard='Es justa la distribucion de ingreso/riqueza',
           code='justiciaingresoriqueza')

hablarpolitica<-data.frame(variable = c("p71sta","p37st.aa","p61st","P30TGB.A","P20TGB.A"),
                           año = c(2005,2006,2007,2013,2015),
                           descripcion=NA,
                           standard='Frecuencia habla de política',
                           code='hablarpolitica')

convencerpoliticamenre <- data.frame(variable = c("p71stb","p37st.ab","P30ST.C","P20ST.C"),
                                     año = c(2005,2006,2013,2015),
                                     descripcion=NA,
                                     standard='Frecuencia intentar convencer políticamente',
                                     code='convencerpolitica')


firmarpeticion <- c(505, "p72sta", "Acción política: Firmar una petición", 2005,
           709, "p37st.ba", "Acción política: Firmar una petición", 2006,
           1109, "p62st.a", "Acción política: Firmar una petición", 2007,
           1495, "p82wvsta", "Acción política: Firmar una petición", 2008,
           2932, "P32STGBS", "P32STGBS Dispuesto a salir a marchar y protestar por: Juntarse con otras personas para tratar un tema o firmar una pet", 2013,
           3252, "P21TGB.A", "P21TGB.A Acciones que ha realizado: Juntarse con otras Personas para tratar un tema o firmar una petición", 2015)

firmarpeticion <- data.frame(
  indice = firmarpeticion[c(TRUE, FALSE, FALSE, FALSE)],
  variable = firmarpeticion[c(FALSE, TRUE, FALSE, FALSE)],
  año = firmarpeticion[c(FALSE, FALSE, FALSE, TRUE)],
  descripcion = firmarpeticion[c(FALSE, FALSE, TRUE,FALSE)]
) %>% mutate(indice = NULL,
             standard='Ha firmado o está dispuesto a firmar una petición',
             code='firmadopeticion')




variable <- c("p13st", "p16st", "p17st", "p9st", "p13st", "p10st", "P10ST", "P11STGBS", "P12STGBS", "P12STGBS", "P8STGBS", "P8STGBS")
año <- c(2004, 2005, 2006, 2007, 2008, 2009, 2010, 2015, 2013, 2018, 2016, 2017)
descripcion <- c("Apoyo a la democracia", "Apoyo a la democracia", "Apoyo a la democracia", "Apoyo a la democracia", "Apoyo a la democracia", "Apoyo a la democracia", "Apoyo a la democracia", "Apoyo a la democracia", "Apoyo a la democracia", "Apoyo a la democracia", "Apoyo a la democracia", "Apoyo a la democracia")

# Crear el dataframe
apoyodemocracia <- data.frame(variable, año, descripcion, standard='Apoyo a la democracia',code='apoyodemocracia')


# Crear un vector con los valores de cada columna
indice <- c(34, 653, 951, 1320, 1722, 2078, 4194, 2881)
variable <- c("p9stc", "p13st.c", "p6stmc", "p12st.c", "p17st.c", "P13ST.C", "P10STC.C", "P11ST.C")
año <- c(2004, 2006, 2007, 2008, 2009, 2010, 2018, 2013)
descripcion <- c("Escala pobreza riqueza hijos", "Escala pobreza riqueza hijos", "Escala pobreza riqueza hijos", "Escala pobreza riqueza hijos", "Escala pobreza riqueza hijos", "Escala pobreza riqueza hijos", "P10STC.C Autoubicación en escala de pobreza-riqueza: Hijos", "P11ST.C Escala pobreza-riqueza hijos")

# Crear el dataframe
escala_hijos<- data.frame(variable, año, descripcion,standard='Riqueza hijos',code='riquezahijos')


# Crear un vector con los valores de cada columna
indice <- c(33, 547, 652, 950, 1319, 1721, 2077, 4193, 2880)
variable <- c("p9stb", "p95st", "p13st.b", "p6stmb", "p12st.b", "p17st.b", "P13ST.B", "P10STC.B", "P11ST.B")
año <- c(2004, 2005, 2006, 2007, 2008, 2009, 2010, 2018, 2013)
descripcion <- c("Escala pobreza riqueza padres", "Escala pobreza riqueza padres", "Escala pobreza riqueza padres", "Escala pobreza riqueza padres", "Escala pobreza riqueza padres", "Escala pobreza riqueza padres", "Escala pobreza riqueza padres", "P10STC.B Autoubicación en escala de pobreza-riqueza: Padres", "P11ST.B Escala pobreza-riqueza padres")

# Crear el dataframe
escala_padres <- data.frame(variable, año, descripcion,standard='Riqueza padres',code='riquezapadres')


# Crear un vector con los valores de cada columna
indice <- c("p9sta", "p13st.a", "p6stma", "p12st.a", "p17st.a", "P13ST.A", "P10STC.A", "P11ST.A")
año <- c(2004, 2006, 2007, 2008, 2009, 2010, 2018, 2013)
descripcion <- c("Escala pobreza riqueza personal", "Escala pobreza riqueza personal", "Escala pobreza riqueza personal", "Escala pobreza riqueza personal", "Escala pobreza riqueza personal", "Escala pobreza riqueza personal", "P10STC.A Autoubicación en escala de pobreza-riqueza: Personal", "P11ST.A Escala pobreza-riqueza personal")

# Crear el dataframe
escala_personal <- data.frame(variable = indice, año, descripcion,standard='Riqueza personal',code='riquezapersonal')

rm(indice,variable,descripcion,año)

variables <- rbind(apoyodemocracia,convencerpoliticamenre,escala_hijos,escala_padres,escala_personal,firmarpeticion,hablarpolitica,redistribucion)



dta <- list.files(path = "../../Latinobarometro/", pattern = ".sav")
dta <- paste0(file = "../../Latinobarometro/",dta)

# names(label_to_colnames(Latinobarometro_2017))
# names(label_to_colnames(Latinobarometro_2017))[str_detect(names(label_to_colnames(Latinobarometro_2017)),"distribuc")]

# vars <- c("P1ST", # (2010-2017)
          # "P27ST","P30STGBS.A","P32STGBS")

resumen_latin<-data.frame()
merge<-data.frame()

# merge <- lapply(dta, function(archivo){
#   print(archivo)
#   df <- read_sav(archivo)%>%
#     mutate(
#     wave = substr(archivo,nchar(archivo)-7,nchar(archivo)-4)
#   ) 
#   
#   return(df)
# })

for(i in dta){
  print(i)
  df <- read_sav(i)%>%
    mutate(wave = substr(i,nchar(i)-7,nchar(i)-4)) 
  
  vars<- variables %>% filter(año==df$wave[1])
  names(df)[names(df)=='IDENPA']<-'idenpa'
  
  df<- df%>% select_if(names(df) %in% c(vars$variable,"wave","idenpa"))
  
  for(z in 1:nrow(vars)){
    names(df)[names(df)==vars$variable[z]]<-vars$code[z]
  }
  
  merge <- bind_rows(merge,df)
  # resumen <- data.frame(var = names(df),
  #                       label = names(label_to_colnames(df)),
  #                       year = df$wave[1])
  # resumen_latin<-bind_rows(resumen_latin,resumen)
  # 
}

# Asumiendo que tu dataframe se llama df

# Obtén los nombres de las columnas que quieres modificar
columnas <- setdiff(names(merge), c("idenpa", "wave"))

# Recorre cada una de las columnas y reemplaza los valores fuera del rango 1-10 con NA
for(col in columnas){
  merge[[col]] <- ifelse(merge[[col]] > 10 | merge[[col]] < 1, NA, merge[[col]])
}

merge$hablarpolitica <- 5 - merge$hablarpolitica
merge$firmadopeticion <- 5 - merge$firmadopeticion
merge$convencerpolitica <- 5 - merge$convencerpolitica
merge$justiciaingresoriqueza <- 5 - merge$justiciaingresoriqueza
merge$idenpa <- droplevels(sjlabelled::to_label(merge$idenpa))
names(merge)[names(merge)=='idenpa']<-'pais'
merge$wave <- as.numeric(merge$wave)
merge$wave <- ifelse(merge$wave %% 2 == 1, merge$wave-1,merge$wave)

merge <- merge %>% filter(pais!='Spain')
```

```{r}
tabla <- table(merge$pais, merge$wave) 
tabla <- tabla>0
tabla <- tabla%>%
  as.data.frame.matrix()

tabla <- tabla %>%
  filter(!rowSums(tabla) == 0)

tabla<-tabla[sort(rownames(tabla)),]%>%
  rbind(colSums(.)) %>%
  rownames_to_column("País")

tabla$País[nrow(tabla)] <- "Total"

for (col in names(tabla)) {
  tabla[[col]] <- ifelse(tabla[[col]] == 1, '✅ ', tabla[[col]])
}

for (col in names(tabla)) {
  tabla[[col]] <- ifelse(tabla[[col]] == 0, '❌', tabla[[col]])
}


tabla%>%
  flextable() %>%
    theme_alafoli()%>%
   autofit() %>%
  bold(i = 19)
  # align(align = "center", part = "all") %>% 
  # bg(bg = "#2a2a2a", part = "header") %>% 
  # color(color = "white", part = "header")


### Variables de interés Latinobarómetro
```

```{r,results='asis'}
print(dfSummary(merge %>% mutate(wave=as.numeric(wave)),
                headings=FALSE,
                method = 'render',
                style = "grid",
                plain.ascii = FALSE,
                tmp.img.dir = 'tmp',
                varnumbers = FALSE,
                silent= TRUE,  split.by = NULL))
```

Se crean dos nuevas columnas a partir de las variables
`riquezapersonal`, `riquzapadres` y `riquezahijos`. La
columna `dif_padres` representa la variación de percepción
de riqueza desde los padres hasta la personal.

$$
\text{dif\_padres} = \text{riquezapersonal} - \text{riquzapadres}
$$

La columna `dif_hijos` representará la variación de
percepción de riqueza desde la personal a la proyectada a
hijos.

$$\text{dif\_hijos} = \text{riquezahijos} - \text{riquezapersonal}$$
```{r}
merge$dif_padres <- merge$riquezapersonal - merge$riquezapadres
merge$dif_hijos <- merge$riquezahijos - merge$riquezapersonal
```

```{r, results='asis'}
print(dfSummary(merge %>% select(dif_padres,dif_hijos),
                headings=FALSE,
                method = 'render',
                style = "grid",
                plain.ascii = FALSE,
                tmp.img.dir = 'tmp',
                varnumbers = FALSE,
                silent= TRUE,  split.by = NULL))
```

```{r}
# Especifica las columnas para excluir
exclude_cols = c("wave", "pais")
# Estandariza los datos
prom_wave_latin <- standardize_data(merge, exclude_cols)
prom_wave_latin <- prom_wave_latin %>% group_by(wave,pais) %>% summarise_if(is.numeric, mean, na.rm = TRUE)
```

```{r}
prom_wave_latin <- prom_wave_latin %>%
  mutate(pais = droplevels(pais)) %>%
  as_tibble()%>%
  complete(wave,pais)

prom_wave_latin[order(prom_wave_latin$pais),] %>%
  head(16)%>%
  mutate(wave = as.factor(wave))%>%
  # replace(is.na(prom), "NA")%>%
  flextable() %>%
  theme_alafoli() %>%
  autofit() %>% 
  # colformat_num(big.mark = "",decimal.mark = ",", digits = 1) %>% 
  colformat_double(big.mark = "",decimal.mark = ",", digits = 1,
                   na_str = "NA",
  nan_str = "NA",)%>%
  align(align = "center", part = "all") %>% 
  
  bg(i = ~ is.na(riquezapersonal) ,j=~ riquezapersonal, bg = "#E73C6D") %>%
  color(i = ~ is.na(riquezapersonal),j=~ riquezapersonal, color='white')%>%
  
  bg(i = ~ is.na(riquezapadres) ,j=~ riquezapadres, bg = "#E73C6D") %>%
  color(i = ~ is.na(riquezapadres),j=~ riquezapadres, color='white')%>%

bg(i = ~ is.na(riquezahijos) ,j=~ riquezahijos, bg = "#E73C6D") %>%
  color(i = ~ is.na(riquezahijos),j=~ riquezahijos, color='white')%>%

bg(i = ~ is.na(apoyodemocracia) ,j=~ apoyodemocracia, bg = "#E73C6D") %>%
  color(i = ~ is.na(apoyodemocracia),j=~ apoyodemocracia, color='white')%>%

bg(i = ~ is.na(hablarpolitica) ,j=~ hablarpolitica, bg = "#E73C6D") %>%
  color(i = ~ is.na(hablarpolitica),j=~ hablarpolitica, color='white')%>%
  
  bg(i = ~ is.na(firmadopeticion) ,j=~ firmadopeticion, bg = "#E73C6D") %>%
  color(i = ~ is.na(firmadopeticion),j=~ firmadopeticion, color='white')%>%
  
  bg(i = ~ is.na(justiciaingresoriqueza) ,j=~ justiciaingresoriqueza, bg = "#E73C6D") %>%
  color(i = ~ is.na(justiciaingresoriqueza),j=~ justiciaingresoriqueza, color='white')%>%
  
    bg(i = ~ is.na(dif_hijos) ,j=~ dif_hijos, bg = "#E73C6D") %>%
  color(i = ~ is.na(dif_hijos),j=~ dif_hijos, color='white')%>%
  
    bg(i = ~ is.na(dif_padres) ,j=~ dif_padres, bg = "#E73C6D") %>%
  color(i = ~ is.na(dif_padres),j=~ dif_padres, color='white')%>%

bg(i = ~ is.na(convencerpolitica) ,j=~ convencerpolitica, bg = "#E73C6D") %>%
  color(i = ~ is.na(convencerpolitica),j=~ convencerpolitica, color='white')
```

### Imputación Latinbarómetro

Se replica la estrategia de imputación implementada en los
datos LAPOP. Se imputa utilizando el dato más cercano hasta un máximo de 3 olas en el pasado, y en
segunda instancia hasta 3 olas en el futuro.

```{r}
# , include=FALSE,message=FALSE

impute_data <- function(df, var) {
  df %>% 
    group_by(pais) %>% 
    mutate(
      temp = ifelse(is.na(!!sym(var)), lag(!!sym(var), 1), !!sym(var)), 
      temp = ifelse(is.na(temp), lag(temp, 1), temp),
       temp = ifelse(is.na(temp), lag(temp, 1), temp),
      temp = ifelse(is.na(temp), lead(temp, 1), temp),
      temp = ifelse(is.na(temp), lead(temp, 1), temp),
      temp = ifelse(is.na(temp), lead(temp, 1), temp),
      !!var := ifelse(is.na(!!sym(var)), temp, !!sym(var))
    ) %>% 
    select(-temp) -> df
  return(df)
}

numeric_vars <- names(prom_wave_latin)[sapply(prom_wave_latin, is.numeric)]
numeric_vars <- setdiff(numeric_vars, "wave")

for(var in numeric_vars){
  prom_wave_latin <- impute_data(prom_wave_latin, var)
}

prom_wave_latin[order(prom_wave_latin$pais),] %>%
  head(16)%>%
  mutate(wave = as.factor(wave))%>%
  # replace(is.na(prom), "NA")%>%
  flextable() %>%
  theme_alafoli() %>%
  autofit() %>% 
  # colformat_num(big.mark = "",decimal.mark = ",", digits = 1) %>% 
  align(align = "center", part = "all") %>%
  colformat_double(big.mark = "",decimal.mark = ",", digits = 1,
                   na_str = "NA",
   nan_str = "NA",) %>%

  bg(i = c(6:7,14:15) ,j=~ riquezapersonal, bg = "#66B16A") %>%
  color(i = c(6:7,14:15),j=~ riquezapersonal, color='white')%>%

  bg(i = c(6:7,14:15) ,j=~ riquezapadres, bg = "#66B16A") %>%
  color(i = c(6:7,14:15),j=~ riquezapadres, color='white')%>%

  bg(i = c(6:7,14:15) ,j=~ riquezahijos, bg = "#66B16A") %>%
  color(i = c(6:7,14:15),j=~ riquezahijos, color='white')%>%

    # bg(i = c(8) ,j=~ apoyodemocracia, bg = "#66B16A") %>%
  # color(i = c(8),j=~ apoyodemocracia, color='white')%>%

    bg(i = c(3:4,7:8,11:12,15:16) ,j=~ hablarpolitica, bg = "#66B16A") %>%
  color(i = c(3:4,7:8,11:12,15:16),j=~ hablarpolitica, color='white')%>%

    bg(i = c(3:4,7:8,11:12,15:16) ,j=~ convencerpolitica, bg = "#66B16A") %>%
  color(i = c(3:4,7:8,11:12,15:16),j=~ convencerpolitica, color='white') %>%
  
    bg(i = c(4,7:8,12,15:16) ,j=~ firmadopeticion, bg = "#66B16A") %>%
  color(i = c(4,7:8,12,15:16),j=~ firmadopeticion, color='white') %>%
  
    bg(i = c(1,9) ,j=~ justiciaingresoriqueza, bg = "#66B16A") %>%
  color(i = c(1,9),j=~ justiciaingresoriqueza, color='white') %>%
  
      bg(i = c(6:7,14:15) ,j=~ dif_padres, bg = "#66B16A") %>%
  color(i = c(6:7,14:15),j=~ dif_padres, color='white') %>%
  
      bg(i = c(6:7,14:15) ,j=~ justiciaingresoriqueza, bg = "#66B16A") %>%
  color(i = c(6:7,14:15),j=~ justiciaingresoriqueza, color='white')
```

De este modo, las variables consideradas quedan sin casos perdidos.

```{r}
data_latinobarometro <- prom_wave_latin
saveRDS(data_latinobarometro,"data_latinobarometro.rds")
```

```{r,eval=FALSE}
prop_casos_perdidos <- function(variable) {
  prop <- round(sum(is.na(variable)) / length(variable) *100,1)
  return(prop)
}

# Crear la tabla de proporción de casos perdidos por variable
tabla_prop_perdidos <- data.frame(
  Variable = colnames(prom_wave_latin),
  `Prop NA` = paste0(sapply(prom_wave_latin, prop_casos_perdidos),"%")
) %>%
  flextable()
tabla_prop_perdidos
```

## World Values Survey

La Encuesta Mundial de Valores (World Values Survey en inglés) es una investigación sociológica a gran escala que tiene como objetivo examinar los valores y creencias de las personas en diferentes países. Fue iniciada en 1981 por Ronald Inglehart y actualmente es llevada a cabo por un equipo internacional de investigadores. Se centra en temas como la religión, la política, la moral, la familia, el trabajo, la confianza en las instituciones, la igualdad de género, entre otros. El objetivo es comprender cómo estos valores y actitudes han evolucionado a lo largo del tiempo y cómo difieren entre diferentes culturas y sociedades.

La encuesta utiliza un cuestionario estandarizado que se aplica de manera consistente en todos los países participantes, lo que permite realizar comparaciones transnacionales y longitudinales. Además, se hace hincapié en la representatividad de la muestra para garantizar la validez de los resultados.

```{r}
load("../../WVS/WVS_TimeSeries_4_0.rdata")
WVS <- data1 ; rm(data1)
columnas <- names(label_to_colnames(WVS))

data <- WVS[c(6,23,
              # 78,80,94:111,115,116,194,
              407,
              # 533,
              804,914)]
respuestas <- to_label(data)

data$COW_NUM<-respuestas$COW_NUM

data <- data %>%
  setNames(c("pais","year","igualdadingresos","orgullonacional","seguridadbarrio"))

data$orgullonacional[data$orgullonacional<1] <- NA
data$orgullonacional <- 5-data$orgullonacional

data$igualdadingresos[data$igualdadingresos<1] <- NA
data$igualdadingresos <- 11-data$igualdadingresos

#Datos desde 2010
data$seguridadbarrio[data$seguridadbarrio<1] <- NA
data$seguridadbarrio <- 5-data$seguridadbarrio

data <- data %>%
  filter(pais %in% c("Argentina", "Bolivia", "Brazil", "Canada",
                     "Chile", "Colombia", "Dominican Republic",
                     "Ecuador","El Salvador", "Guatemala", "Haiti",
                     "Mexico", "Nicaragua","Trinidad and Tobago",
                     "Peru","Puerto Rico", "United States of America",
                     "Uruguay","Venezuela")) %>%
  filter(year > 2003)
            

# columnas[which(str_detect(columnas,"How proud of nationality"))] #804; G006
#   [23] "Year survey"                                                                     
#   [78] "Member: Belong to labour unions"
#   [80] "Member: Belong to local political actions"        
# 
# 
# [94] "Voluntary work: Unpaid work social welfare service for elderly, handicapped or d"
#   [95] "Voluntary work: Unpaid work religious or church organization"                    
#   [96] "Voluntary work: Unpaid work education, arts, music or cultural activities"       
#   [97] "Voluntary work: Unpaid work labour unions"                                       
#   [98] "Voluntary work: Unpaid work political parties or groups"                         
#   [99] "Voluntary work: Unpaid work local political action groups"                       
#  [100] "Voluntary work: Unpaid work human rights"                                        
#  [101] "Voluntary work: Unpaid work environment, conservation, animal rights"            
#  [102] "Voluntary work: Unpaid work environment, conservation, ecology"                  
#  [103] "Voluntary work: Unpaid work animal rights"                                       
#  [104] "Voluntary work: Unpaid work professional associations"                           
#  [105] "Voluntary work: Unpaid work youth work"                                          
#  [106] "Voluntary work: Unpaid work sports or recreation"                                
#  [107] "Voluntary work: Unpaid work womenÂ´s group"                                      
#  [108] "Voluntary work: Unpaid work peace movement"                                      
#  [109] "Voluntary work: Unpaid work organization concerned with health"                  
#  [110] "Voluntary work: Unpaid work other groups"                                        
#  [111] "Voluntary work: Unpaid work none
# 
# [115] "Active/Inactive membership of labour unions"                                     
#  [116] "Active/Inactive membership of political party"
#  [194] "Most people can be trusted"                                                      
# 
#  [407] "Income equality"                            1990 a 2022
#  [533] "Chance to escape from poverty"              #1995 a 1998                                     
# 
#  [914] "Secure in neighborhood"                     2010-2022                                     

standardize_data <- function(df, exclude_cols = NULL) {
  cols <- setdiff(names(df)[sapply(df, is.numeric)], exclude_cols)
  for(col in cols) {
    old_min <- min(df[[col]], na.rm = TRUE)
    old_max <- max(df[[col]], na.rm = TRUE)
    new_min <- 0
    new_max <- 10
    df[[col]] <- ifelse(!is.na(df[[col]]), ((df[[col]] - old_min) / (old_max - old_min)) * 
                        (new_max - new_min) + new_min, NA)
  }
  return(df)
}

# Especifica las columnas para excluir
exclude_cols = c("year", "pais")

# Estandariza los datos
data <- standardize_data(data, exclude_cols)
data$wave <- ifelse(data$year %% 2 == 1,data$year-1,data$year)
data$wave[data$wave==2022] <- 2020

prom_wave_wvs <- data %>% select(-year) %>% group_by(wave,pais) %>% summarise_if(is.numeric, mean, na.rm = TRUE)

```

### Paises por cada ola

Los datos de la encuesta son recodificados en olas de dos años siguiendo el esquema LAPOP. Se recodifica el año de cada caso asignando a los valores impares una unidad menos (ej. 2017 pasa a 2016). Se hace una excepción con Uruguay 2022, siendo reasignado como 2020. En sus registros formales el estudio agrupa olas que abarcan alrededor de 5 años por cada iteración. 

```{r}
tabla <- table(data$pais, data$wave) 
tabla <- tabla>0
tabla <- tabla%>%
  as.data.frame.matrix()

tabla <- tabla %>%
  filter(!rowSums(tabla) == 0)

tabla<-tabla[sort(rownames(tabla)),]

tabla <- tabla %>%
  rbind(colSums(.)) %>%
  rownames_to_column("País")

for (col in names(tabla)) {
  tabla[1:17,][[col]] <- ifelse(tabla[1:17,][[col]] == 1, '✅ ', tabla[1:17,][[col]])
}

for (col in names(tabla)) {
  tabla[1:17,][[col]] <- ifelse(tabla[1:17,][[col]] == 0, '❌', tabla[1:17,][[col]])
}



tabla$País[nrow(tabla)] <- "Total"

tabla%>%
  flextable() %>%
    theme_alafoli()%>%
   autofit() %>%
  bold(i = 18)
  # align(align = "center", part = "all") %>% 
  # bg(bg = "#2a2a2a", part = "header") %>% 
  # color(color = "white", part = "header")


### Variables de interés Latinobarómetro
```



```{r}
prom_wave_wvs <- prom_wave_wvs %>%
  mutate(pais = droplevels(pais)) %>%
  as_tibble()%>%
  complete(wave,pais)

prom_wave_wvs[order(prom_wave_wvs$pais),] %>%
  head(16)%>%
  mutate(wave = as.factor(wave))%>%
  # replace(is.na(prom), "NA")%>%
  flextable() %>%
  theme_alafoli() %>%
  autofit() %>% 
  # colformat_num(big.mark = "",decimal.mark = ",", digits = 1) %>% 
  colformat_double(big.mark = "",decimal.mark = ",", digits = 1,
                   na_str = "NA",
  nan_str = "NA",)%>%
  align(align = "center", part = "all") %>% 

  bg(i = ~ is.na(seguridadbarrio) ,j=~ seguridadbarrio, bg = "#E73C6D") %>%
  color(i = ~ is.na(seguridadbarrio),j=~ seguridadbarrio, color='white') %>%
  
  bg(i = ~ is.na(igualdadingresos) ,j=~ igualdadingresos, bg = "#E73C6D") %>%
  color(i = ~ is.na(igualdadingresos),j=~ igualdadingresos, color='white') %>%
  
  bg(i = ~ is.na(orgullonacional) ,j=~ orgullonacional, bg = "#E73C6D") %>%
  color(i = ~ is.na(orgullonacional),j=~ orgullonacional, color='white')
```


### Imputación

Se replica la estrategia de imputación implementada en los
datos LAPOP. Se imputa utilizando el dato más cercano hasta un máximo de 3 olas en el pasado, y en
segunda instancia hasta 3 olas en el futuro.

```{r}
impute_data <- function(df, var) {
  df %>% 
    group_by(pais) %>% 
    mutate(
      temp = ifelse(is.na(!!sym(var)), lag(!!sym(var), 1), !!sym(var)), 
      temp = ifelse(is.na(temp), lag(temp, 1), temp),
       temp = ifelse(is.na(temp), lag(temp, 1), temp),
      temp = ifelse(is.na(temp), lead(temp, 1), temp),
      temp = ifelse(is.na(temp), lead(temp, 1), temp),
      temp = ifelse(is.na(temp), lead(temp, 1), temp),
      !!var := ifelse(is.na(!!sym(var)), temp, !!sym(var))
    ) %>% 
    select(-temp) -> df
  return(df)
}

numeric_vars <- names(prom_wave_wvs)[sapply(prom_wave_wvs, is.numeric)]
numeric_vars <- setdiff(numeric_vars, "wave")

for(var in numeric_vars){
  prom_wave_wvs <- impute_data(prom_wave_wvs, var)
}

```

```{r}
prom_wave_wvs[order(prom_wave_wvs$pais),] %>%
  head(16)%>%
  mutate(wave = as.factor(wave))%>%
  # replace(is.na(prom), "NA")%>%
  flextable() %>%
  theme_alafoli() %>%
  autofit() %>% 
  # colformat_num(big.mark = "",decimal.mark = ",", digits = 1) %>% 
  colformat_double(big.mark = "",decimal.mark = ",", digits = 1,
                   na_str = "NA",
  nan_str = "NA",)%>%
  align(align = "center", part = "all") %>% 

  bg(i = ~ is.na(seguridadbarrio) ,j=~ seguridadbarrio, bg = "#E73C6D") %>%
  color(i = ~ is.na(seguridadbarrio),j=~ seguridadbarrio, color='white') %>%
  
  bg(i = ~ is.na(igualdadingresos) ,j=~ igualdadingresos, bg = "#E73C6D") %>%
  color(i = ~ is.na(igualdadingresos),j=~ igualdadingresos, color='white') %>%
  
  bg(i = ~ is.na(orgullonacional) ,j=~ orgullonacional, bg = "#E73C6D") %>%
  color(i = ~ is.na(orgullonacional),j=~ orgullonacional, color='white') %>%
  
  bg(i = c(2,3,5,6,8,10:15) ,j=~ igualdadingresos, bg = "#66B16A") %>%
  color(i = c(2,3,5,6,8,10:15),j=~ igualdadingresos, color='white') %>%
  
  bg(i = c(2,3,5,6,8,10:15) ,j=~ orgullonacional, bg = "#66B16A") %>%
  color(i = c(2,3,5,6,8,10:15),j=~ orgullonacional, color='white') %>%
  
  bg(i = c(1,2,3,5,6,8,13:15) ,j=~ seguridadbarrio, bg = "#66B16A") %>%
  color(i = c(1,2,3,5,6,8,13:15),j=~ seguridadbarrio, color='white') 

data_wvs <- prom_wave_wvs
saveRDS(data_wvs,"data_wvs.rds")
```

```{r,eval=FALSE}
prop_casos_perdidos <- function(variable) {
  prop <- round(sum(is.na(variable)) / length(variable) *100,1)
  return(prop)
}

# Crear la tabla de proporción de casos perdidos por variable
tabla_prop_perdidos <- data.frame(
  Variable = colnames(prom_wave_wvs),
  `Prop NA` = paste0(sapply(prom_wave_wvs, prop_casos_perdidos),"%")
) %>%
  flextable()
tabla_prop_perdidos
```

Luego de la imputación, la proporción de datos perdidos es de un 12,5% tanto para `igualdadingresos` como para `orgullonacional`. Para la variable `seguridadbarrio` esta alcanza un 19.1%.

# Merge

El dataset generado contiene los 175 casos iniciales de la encuesta LAPOP complementados con la información de los otros dos estudios. La información resultante está contenida en un total de 31 variables.

```{r}
rm(list=ls())
data_lapop <- readRDS("data_lapop.rds")
data_latinobarometro <- readRDS("data_latinobarometro.rds")
data_wvs <- readRDS("data_wvs.rds")

data_latinobarometro$pais <- as.character(data_latinobarometro$pais)
data_lapop$pais <- as.character(data_lapop$pais)
data_wvs$pais <- as.character(data_wvs$pais)

data_latinobarometro$pais[data_latinobarometro$pais =='Dominican Rep.'] <- "Dominican Republic" 
data_wvs$pais[data_wvs$pais =='Trinidad and Tobago'] <- "Trinidad & Tobago" 
data_wvs$pais[data_wvs$pais =='United States of America'] <- "United States"
# unique(data_lapop$pais)
# unique(data_latinobarometro$pais)
# unique(data_wvs$pais)
# 
# paises<-unique(sort(c(unique(as.character(data_lapop$pais)),
#           unique(as.character(data_latinobarometro$pais)),
#           unique(as.character(data_wvs$pais)))))

datos <- merge(data_lapop,data_latinobarometro,by=c("pais","wave"),all.x = TRUE)
datos <- merge(datos,data_wvs,by=c("pais","wave"),all.x = TRUE)
```


# Construcción Índices

Para la construcción de cada índice se realizó el cálculo de la media entre los indicadores, todos previamente normalizados en una escala 0-10. Los valores ponderados para cada subdimensión se promediaron nuevamente para la estimación de dimensiones, y finalmente de cada índice. Para el cómputo del Índice de Cohesión General se calculó la media entre Índice de Cohesión Vertical y el Índice de Cohesión Horizontal. A continuación se presentan los resultados.

![](../../esquema.svg)

```{r Creación índice}
## Horizontal ----
mean_na <- function(...) {
  mean_result <- mean(c(...), na.rm = TRUE)
  if (is.nan(mean_result)) {
    mean_result <- NA
  }
  return(mean_result)
}


# prom<- ungroup(prom)
prom <- datos %>%
  group_by(wave,pais)%>%
  mutate(sub_identidadnacional = NA,
         sub_orgullonacional = mean_na(b4,orgullonacional),
         sub_confianzavecinos = it1,
         sub_cohesionbarrial = NA,
         sub_sociabilidadbarrial = NA,
         sub_satisfaccionresidencial = mean_na(aoj11,sd2new2,sd3new2,sd6new2,seguridadbarrio),
         sub_confianzainterpersonal = it1,
         sub_comportamientoprosocial = cp8,
         
         sub_confianzainstitutciones= mean_na(b21a,b21,b18,b10a,b13),
         sub_actitudhacialademocracia = mean_na(pn4,b4,apoyodemocracia),
         sub_participacioncivica = mean_na(prot3,hablarpolitica,convencerpolitica,firmadopeticion),
         sub_interespolitico = mean_na(pol1,vb2),
         sub_justiciadistributiva = mean_na(justiciaingresoriqueza,igualdadingresos),
         sub_surgirenlavida = mean_na(dif_hijos,dif_padres))

prom <- prom %>%
  group_by(wave,pais)%>%
  mutate(dim_sentidopertenencia = mean_na(sub_identidadnacional,sub_orgullonacional),
         dim_calidaddevidaenelvecindario = mean_na(sub_confianzavecinos,
                                                   sub_cohesionbarrial,
                                                   sub_sociabilidadbarrial,
                                                   sub_satisfaccionresidencial),
         dim_redessociales = mean_na(sub_confianzainterpersonal,sub_comportamientoprosocial),
         
         
         
         dim_confianzainstitucionesdemocracia = mean_na(sub_confianzainstitutciones,
                                                        sub_actitudhacialademocracia),
         dim_participacionpolitica = mean_na(sub_participacioncivica,
                                             sub_interespolitico),
         dim_percepcionjusticia = mean_na(sub_justiciadistributiva,
                                       sub_surgirenlavida)
        )

prom <- prom %>%
  group_by(wave,pais)%>%
  mutate(cohesion_horizontal = mean_na(dim_sentidopertenencia,
                                       dim_calidaddevidaenelvecindario,
                                       dim_redessociales),
         cohesion_vertical = mean_na(dim_confianzainstitucionesdemocracia,
                                     dim_participacionpolitica,
                                     dim_percepcionjusticia)
         )

prom$cohesion_general <- (prom$cohesion_horizontal+prom$cohesion_vertical)/2
```

```{r}
# i = unique(prom$pais)[1]
calidad <- data.frame()
for(i in unique(prom$pais)){
  
  part <- prom[prom$pais==i,1:31] %>% as.data.frame %>%
    select(-c(pais,wave,riquezapersonal,riquezapadres,riquezahijos)) %>%
    is.na()
  
  part <- as.data.frame(!part)
  
  n_years <- nrow(part)
  
  part <- data.frame(pais=i,
                    sub_orgullonacional = paste0(round(sum(c(part$b4,part$orgullonacional))/(2*n_years)*100,1),"%"),
                    sub_confianzavecinos = paste0(round(sum(c(part$it1))/(1*n_years)*100,1),"%"),
                    sub_satisfaccionresidencial = paste0(round(sum(c(
                      part$aoj11, part$sd2new2, part$sd3new2, part$sd6new2, part$seguridadbarrio
                      ))/(5*n_years)*100,1),"%"),
                    sub_confianzainterpersonal = paste0(round(sum(c(part$it1))/(1*n_years)*100,1),"%"),
                    sub_comportamientoprosocial = paste0(round(sum(c(part$cp8))/(1*n_years)*100,1),"%"),
                    
                     sub_confianzainstitutciones = paste0(round(sum(c(
                      part$b21a, part$b21, part$b18, part$b10a, part$b13
                      ))/(5*n_years)*100,1),"%"),
                    
                    
                    sub_actitudhacialademocracia = paste0(round(sum(c(
                      part$pn4, part$b4, part$apoyodemocracia
                      ))/(3*n_years)*100,1),"%"),
                    
                    sub_participacioncivica = paste0(round(sum(c(part$prot3,
                                                                 part$hablarpolitica,
                                                                 part$convencerpolitica,
                                                                 part$firmadopeticion)
                                                               )/(4*n_years)*100,1),"%"),
                    
                    sub_interespolitico = paste0(round(sum(c(part$pol1,
                                                                 part$vb2)
                                                               )/(2*n_years)*100,1),"%"),
                    sub_justiciadistributiva = paste0(round(sum(c(part$justiciaingresoriqueza,
                                                                 part$igualdadingresos)
                                                               )/(2*n_years)*100,1),"%"),
                    
                    sub_surgirenlavida = paste0(round(sum(c(part$dif_hijos,
                                                                 part$dif_padres)
                                                               )/(2*n_years)*100,1),"%"))
  calidad<- rbind(calidad,part)

  
}
```

**Calidad índice horizontal**

```{r}
calidad[1:6] %>%
  flextable() %>%
    theme_alafoli()%>%
   autofit()
```

**Calidad índice vertical**

```{r}
calidad[c(1,7:12)] %>%
  flextable() %>%
    theme_alafoli()%>%
   autofit()
```


```{r Visualizacion vertical}
plot<-ggplot(prom, aes(x = wave, y = cohesion_vertical, color=pais,group=pais)) +
  geom_point() +
  geom_line() +
  # geom_smooth(method = "lm", se = TRUE)+
  theme_minimal()+
  ggtitle(paste0('Cohesión vertical por país'))+
  labs(
    x = "Ola",
    y = "Puntaje (0-10)",
    #color = "Tasa homofilia",
    subtitle = "Datos por país.",
    caption = paste("Datos LAPOP."))+
  theme(legend.position='bottom',
        #text=element_text(family=font_ggplot),
        plot.title = element_text(face="bold"),
        legend.title = element_text(
                                    #size=size_title_legend,
                                    face = "bold"
        ), 
        #legend.text = element_text(size=size_text_legend),
        #legend.key.width = unit(size_key_legend, 'cm'),
  )
ggplotly(plot)
```

```{r Visualizacion hotizontal}
plot<-ggplot(prom, aes(x = wave, y = cohesion_horizontal, color=pais,group=pais)) +
  geom_point() +
  geom_line() +
  # geom_smooth(method = "lm", se = TRUE)+
  theme_minimal()+
  ggtitle(paste0('Cohesión horizontal por país'))+
  labs(
    x = "Ola",
    y = "Puntaje (0-10)",
    #color = "Tasa homofilia",
    subtitle = "Datos por país.",
    caption = paste("Datos LAPOP."))+
  theme(legend.position='bottom',
        #text=element_text(family=font_ggplot),
        plot.title = element_text(face="bold"),
        legend.title = element_text(
                                    #size=size_title_legend,
                                    face = "bold"
        ), 
        #legend.text = element_text(size=size_text_legend),
        #legend.key.width = unit(size_key_legend, 'cm'),
  )
ggplotly(plot)
```

```{r Visualizacion general}
plot<-ggplot(prom, aes(x = wave, y = cohesion_general, color=pais,group=pais)) +
  geom_point() +
  geom_line() +
  # geom_smooth(method = "lm", se = TRUE)+
  theme_minimal()+
  ggtitle(paste0('Cohesión general por país'))+
  labs(
    x = "Ola",
    y = "Puntaje (0-10)",
    #color = "Tasa homofilia",
    subtitle = "Datos por país.",
    caption = paste("Datos LAPOP."))+
  theme(legend.position='bottom',
        #text=element_text(family=font_ggplot),
        plot.title = element_text(face="bold"),
        legend.title = element_text(
                                    #size=size_title_legend,
                                    face = "bold"
        ), 
        #legend.text = element_text(size=size_text_legend),
        #legend.key.width = unit(size_key_legend, 'cm'),
  )
ggplotly(plot)
```

## Anexo

**Valores por dimensión**

```{r}

summary_dims <- prom %>%
  select(pais,wave,
         dim_sentidopertenencia,dim_calidaddevidaenelvecindario,
         dim_redessociales,dim_confianzainstitucionesdemocracia,
         dim_participacionpolitica,dim_percepcionjusticia) 

summary_dims %>%
  flextable() %>%
    theme_alafoli()%>%
   autofit()
```