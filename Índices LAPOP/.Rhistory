# Chunk 8: Disponibilidad de datos LAPOP
review <- data.frame()
for( i in colnames(prom_wave)){
tabla_frecuencia <- prom_wave %>%
count(pais,wave, is.na(!!sym(i))) %>%
setNames(c("pais","wave","is_na","n"))%>%
complete(pais, wave, is_na, fill = list(n = 0)) %>%
group_by(pais,wave) %>% mutate(percent= n/sum(n), var=as.character(i),
label = as.character(get_label(prom_wave)[i]))
tabla_frecuencia$percent[is.na(tabla_frecuencia$percent)]<-0
tabla_frecuencia <- tabla_frecuencia[tabla_frecuencia[, 3] == FALSE,
c(1,2,4,5,6,7)]
tabla_frecuencia$pais <- as_label(tabla_frecuencia$pais)
var <- as.character(get_label(prom_wave)[i])
review<-rbind(review,tabla_frecuencia)
}
review_summary <- review %>% group_by(label,wave) %>%
summarise(presencia = sum(percent>0)/25,
n_valid = sum(percent>0))
plot <- ggplot(review_summary, aes(x = wave, y = presencia, color=label,group=label)) +
geom_point() +
geom_line() +
theme_minimal()+
ggtitle(paste0('Proporción paises con dato para: ', as.character(get_label(merge)[i])))+
labs(
x = "Ola",
y = "Frecuencia relativa",
subtitle = "Frecuencia relativa de casos",
caption = paste("Datos LAPOP."))+
theme(legend.position='bottom',
plot.title = element_text(face="bold"),
legend.title = element_text(face = "bold")) +
coord_cartesian(ylim = c(0, NA))
ggplotly(plot)
# Chunk 9
review_summary_pais_wave <- review %>% group_by(pais,wave)%>%
filter(!var %in% c('wave',"pais","year"))%>%
filter(!pais %in% c("Suriname","Bahamas","Barbados","Grenada","Saint Lucia","Dominica","Saint Vincent and the Grenadines","Saint Kitts and Nevis"))%>%
filter(wave != 2021)%>%
summarise(presencia = sum(percent>0)/25,
n_valid = sum(percent>0))
# Chunk 10
review$label[review$var=='b39n']<-'Confianza en el sector privado.'
plot<-ggplot(review_summary_pais_wave, aes(x = wave, y = presencia, color=pais,group=pais)) +
geom_point() +
geom_line() +
theme_minimal()+
ggtitle(paste0('Proporción de variables disponibles por país y ola', as.character(get_label(merge)[i])))+
labs(
x = "Ola",
y = "Frecuencia relativa",
subtitle = "Frecuencia relativa de casos",
caption = paste("Datos LAPOP."))+
theme(legend.position='bottom',
plot.title = element_text(face="bold"),
legend.title = element_text(face = "bold"),
) + coord_cartesian(ylim = c(0, NA))
ggplotly(plot)
# Chunk 11
# include=FALSE,message=FALSE
prom <- prom_wave[order(prom_wave$pais),] %>%
filter(!pais %in% c("Suriname","Bahamas","Barbados","Grenada",
"Saint Lucia","Dominica","Saint Kitts and Nevis",
"Saint Vincent and the Grenadines")) %>%
filter(wave != 2021) %>%
select(-c(year,b43,vicbar1,vicbar3,vicbar7,jamb18a,b23,b39n,nicfear,
movus1))
df_complete <- expand_grid(wave = unique(prom$wave),
pais = unique(prom$pais))
prom <- left_join(df_complete, prom, by = c("wave", "pais"))
prom <- prom[order(prom$pais),]
prom %>%
head(16) %>%
mutate(wave = as.factor(wave))%>%
flextable() %>%
theme_alafoli() %>%
autofit() %>%
colformat_double(big.mark = "",decimal.mark = ",", digits = 1,
na_str = "NA",
nan_str = "NA",) %>%
align(align = "center", part = "all") %>%
bg(i = ~ is.na(prot3) ,j=~ prot3, bg = "#E73C6D") %>%
color(i = ~ is.na(prot3),j=~ prot3, color='white')%>%
bg(i = ~ is.na(sd2new2) ,j=~ sd2new2, bg = "#E73C6D") %>%
color(i = ~ is.na(sd2new2),j=~ sd2new2, color='white')%>%
bg(i = ~ is.na(sd3new2) ,j=~ sd3new2, bg = "#E73C6D") %>%
color(i = ~ is.na(sd3new2),j=~ sd3new2, color='white')%>%
bg(i = ~ is.na(sd6new2) ,j=~ sd6new2, bg = "#E73C6D") %>%
color(i = ~ is.na(sd6new2),j=~ sd6new2, color='white')%>%
bg(i = ~ is.na(pol1) ,j=~ pol1, bg = "#E73C6D") %>%
color(i = ~ is.na(pol1),j=~ pol1, color='white')%>%
bg(i = ~ is.na(b21a) ,j=~ b21a, bg = "#E73C6D") %>%
color(i = ~ is.na(b21a),j=~ b21a, color='white')
# Chunk 12
impute_data <- function(df, var) {
df %>%
group_by(pais) %>%
mutate(
temp = ifelse(is.na(!!sym(var)), lag(!!sym(var), 1), !!sym(var)),
temp = ifelse(is.na(temp), lag(temp, 1), temp),
temp = ifelse(is.na(temp), lag(temp, 1), temp),
temp = ifelse(is.na(temp), lead(temp, 1), temp),
temp = ifelse(is.na(temp), lead(temp, 1), temp),
temp = ifelse(is.na(temp), lead(temp, 1), temp),
!!var := ifelse(is.na(!!sym(var)), temp, !!sym(var))) %>%
select(-temp) -> df
return(df)
}
numeric_vars <- names(prom)[sapply(prom, is.numeric)]
numeric_vars <- setdiff(numeric_vars, "wave")
for(var in numeric_vars){
prom <- impute_data(prom, var)
}
prom %>%
head(16)%>%
mutate(wave = as.factor(wave))%>%
# replace(is.na(prom), "NA")%>%
flextable() %>%
theme_alafoli() %>%
autofit() %>%
# colformat_num(big.mark = "",decimal.mark = ",", digits = 1) %>%
align(align = "center", part = "all") %>%
colformat_double(big.mark = "",decimal.mark = ",", digits = 1,
na_str = "NA",
nan_str = "NA",) %>%
bg(i = ~ is.na(sd2new2) ,j=~ sd2new2, bg = "#E73C6D") %>%
color(i = ~ is.na(sd2new2),j=~ sd2new2, color='white')%>%
bg(i = ~ is.na(sd3new2) ,j=~ sd3new2, bg = "#E73C6D") %>%
color(i = ~ is.na(sd3new2),j=~ sd3new2, color='white')%>%
bg(i = ~ is.na(sd6new2) ,j=~ sd6new2, bg = "#E73C6D") %>%
color(i = ~ is.na(sd6new2),j=~ sd6new2, color='white')%>%
bg(i = c(1:3,9:11) ,j=~ prot3, bg = "#66B16A") %>%
color(i = c(1:3,9:11),j=~ prot3, color='white')%>%
bg(i = c(1:2,9:10) ,j=~ b21a, bg = "#66B16A") %>%
color(i = c(1:2,9:10),j=~ b21a, color='white')%>%
bg(i = c(2:4,10:12) ,j=~ sd2new2, bg = "#66B16A") %>%
color(i = c(2:4,10:12),j=~ sd2new2, color='white')%>%
bg(i = c(2:4,10:12) ,j=~ sd3new2, bg = "#66B16A") %>%
color(i = c(2:4,10:12),j=~ sd3new2, color='white')%>%
bg(i = c(2:4,10:12) ,j=~ sd6new2, bg = "#66B16A") %>%
color(i = c(2:4,10:12),j=~ sd6new2, color='white')%>%
bg(i = c(1,9) ,j=~ pol1, bg = "#66B16A") %>%
color(i = c(1,9),j=~ pol1, color='white')
# Chunk 14: Carga de datos latinbarometro
redistribucion<- data.frame(
variable =c("p17st","p26st.e","p14st","P12ST","P12ST","P27ST","P18ST","P21ST","P20ST","P23ST"),
año=c(2007,    2008,     2009,  2010,  2011,    2013,  2015,    2016,   2017,   2018),
descripcion=c("Es justa la distribución del ingreso", # 1 Muy justa 4 Muy injusta
"Garantías: Justa distribución de la riqueza", #1 Completamente garantizadas 4 Para nada garantizadas
"Es justa la distribución del ingreso", ## 1 Muy justa 4 Muy injusta
"Es justa la distribución del ingreso", ## 1 Muy justa 4 Muy injusta
"¿Cuán justa cree Ud. que es la distribución del ingreso en (país)?", # 1 Muy justa 4 Muy injusta
"Cómo de justa es la distribución del ingreso en el país", # 1 Muy justa 4 Muy injusta
"Cómo de justa es la distribución del ingreso en el país",# 1 Muy justa 4 Muy injusta
"Cómo de justa es la distribución del ingreso en el país",# 1 Muy justa 4 Muy injusta
"Cómo de justa es la distribución del ingreso en el país",# 1 Muy justa 4 Muy injusta
"Cómo de justa es la distribución del ingreso en el país"# 1 Muy justa 4 Muy injusta
),
standard='Es justa la distribucion de ingreso/riqueza',
code='justiciaingresoriqueza')
hablarpolitica<-data.frame(variable = c("p71sta","p37st.aa","p61st","P30TGB.A","P20TGB.A"),
año = c(2005,2006,2007,2013,2015),
descripcion=NA,
standard='Frecuencia habla de política',
code='hablarpolitica')
convencerpoliticamenre <- data.frame(variable = c("p71stb","p37st.ab","P30ST.C","P20ST.C"),
año = c(2005,2006,2013,2015),
descripcion=NA,
standard='Frecuencia intentar convencer políticamente',
code='convencerpolitica')
firmarpeticion <- c(505, "p72sta", "Acción política: Firmar una petición", 2005,
709, "p37st.ba", "Acción política: Firmar una petición", 2006,
1109, "p62st.a", "Acción política: Firmar una petición", 2007,
1495, "p82wvsta", "Acción política: Firmar una petición", 2008,
2932, "P32STGBS", "P32STGBS Dispuesto a salir a marchar y protestar por: Juntarse con otras personas para tratar un tema o firmar una pet", 2013,
3252, "P21TGB.A", "P21TGB.A Acciones que ha realizado: Juntarse con otras Personas para tratar un tema o firmar una petición", 2015)
firmarpeticion <- data.frame(
indice = firmarpeticion[c(TRUE, FALSE, FALSE, FALSE)],
variable = firmarpeticion[c(FALSE, TRUE, FALSE, FALSE)],
año = firmarpeticion[c(FALSE, FALSE, FALSE, TRUE)],
descripcion = firmarpeticion[c(FALSE, FALSE, TRUE,FALSE)]
) %>% mutate(indice = NULL,
standard='Ha firmado o está dispuesto a firmar una petición',
code='firmadopeticion')
variable <- c("p13st", "p16st", "p17st", "p9st", "p13st", "p10st", "P10ST", "P11STGBS", "P12STGBS", "P12STGBS", "P8STGBS", "P8STGBS")
año <- c(      2004,     2005,    2006,   2007,    2008,   2009,    2010,      2015,       2013,       2018,     2016,      2017)
descripcion <- c("Apoyo a la democracia", "Apoyo a la democracia", "Apoyo a la democracia", "Apoyo a la democracia", "Apoyo a la democracia", "Apoyo a la democracia", "Apoyo a la democracia", "Apoyo a la democracia", "Apoyo a la democracia", "Apoyo a la democracia", "Apoyo a la democracia", "Apoyo a la democracia")
# Crear el dataframe
apoyodemocracia <- data.frame(variable, año, descripcion, standard='Apoyo a la democracia',code='apoyodemocracia')
# Crear un vector con los valores de cada columna
indice <- c(34, 653, 951, 1320, 1722, 2078, 4194, 2881)
variable <- c("p9stc", "p13st.c", "p6stmc", "p12st.c", "p17st.c", "P13ST.C", "P10STC.C", "P11ST.C")
año <- c(2004, 2006, 2007, 2008, 2009, 2010, 2018, 2013)
descripcion <- c("Escala pobreza riqueza hijos", "Escala pobreza riqueza hijos", "Escala pobreza riqueza hijos", "Escala pobreza riqueza hijos", "Escala pobreza riqueza hijos", "Escala pobreza riqueza hijos", "P10STC.C Autoubicación en escala de pobreza-riqueza: Hijos", "P11ST.C Escala pobreza-riqueza hijos")
# Crear el dataframe
escala_hijos<- data.frame(variable, año, descripcion,standard='Riqueza hijos',code='riquezahijos')
# Crear un vector con los valores de cada columna
indice <- c(33, 547, 652, 950, 1319, 1721, 2077, 4193, 2880)
variable <- c("p9stb", "p95st", "p13st.b", "p6stmb", "p12st.b", "p17st.b", "P13ST.B", "P10STC.B", "P11ST.B")
año <- c(2004, 2005, 2006, 2007, 2008, 2009, 2010, 2018, 2013)
descripcion <- c("Escala pobreza riqueza padres", "Escala pobreza riqueza padres", "Escala pobreza riqueza padres", "Escala pobreza riqueza padres", "Escala pobreza riqueza padres", "Escala pobreza riqueza padres", "Escala pobreza riqueza padres", "P10STC.B Autoubicación en escala de pobreza-riqueza: Padres", "P11ST.B Escala pobreza-riqueza padres")
# Crear el dataframe
escala_padres <- data.frame(variable, año, descripcion,standard='Riqueza padres',code='riquezapadres')
# Crear un vector con los valores de cada columna
indice <- c("p9sta", "p13st.a", "p6stma", "p12st.a", "p17st.a", "P13ST.A", "P10STC.A", "P11ST.A")
año <- c(2004, 2006, 2007, 2008, 2009, 2010, 2018, 2013)
descripcion <- c("Escala pobreza riqueza personal", "Escala pobreza riqueza personal", "Escala pobreza riqueza personal", "Escala pobreza riqueza personal", "Escala pobreza riqueza personal", "Escala pobreza riqueza personal", "P10STC.A Autoubicación en escala de pobreza-riqueza: Personal", "P11ST.A Escala pobreza-riqueza personal")
# Crear el dataframe
escala_personal <- data.frame(variable = indice, año, descripcion,standard='Riqueza personal',code='riquezapersonal')
rm(indice,variable,descripcion,año)
variables <- rbind(apoyodemocracia,convencerpoliticamenre,escala_hijos,escala_padres,escala_personal,firmarpeticion,hablarpolitica,redistribucion)
dta <- list.files(path = "Latinobarometro/", pattern = ".sav")
dta <- paste0(file = "Latinobarometro/",dta)
resumen_latin<-data.frame()
merge<-data.frame()
for(i in dta){
print(i)
df <- read_sav(i)%>%
mutate(wave = substr(i,nchar(i)-7,nchar(i)-4))
vars<- variables %>% filter(año==df$wave[1])
names(df)[names(df)=='IDENPA']<-'idenpa'
df<- df%>% select_if(names(df) %in% c(vars$variable,"wave","idenpa"))
for(z in 1:nrow(vars)){
names(df)[names(df)==vars$variable[z]]<-vars$code[z]
}
merge <- bind_rows(merge,df)
}
columnas <- setdiff(names(merge), c("idenpa", "wave"))
# Recorre cada una de las columnas y reemplaza los valores fuera del rango 1-10 con NA
for(col in columnas){
merge[[col]] <- ifelse(merge[[col]] > 10 | merge[[col]] < 1, NA, merge[[col]])
}
# ## Revisión variables
# for(i in dta){
#     df <- read_sav(i)%>%
#         mutate(wave = substr(i,nchar(i)-7,nchar(i)-4))
#     wave_df <- df$wave[1]
#     var <- convencerpoliticamenre$variable[convencerpoliticamenre$año==wave_df]
#     try(
#         print(frq(df[var]))
#     )
# }
## Ajuste escala variables
merge$hablarpolitica <- 5 - merge$hablarpolitica
merge$firmadopeticion <- 4 - merge$firmadopeticion
merge$convencerpolitica <- 5 - merge$convencerpolitica
merge$justiciaingresoriqueza <- 5 - merge$justiciaingresoriqueza
merge$apoyodemocracia <- 4 - merge$apoyodemocracia
merge$idenpa <- droplevels(sjlabelled::to_label(merge$idenpa))
names(merge)[names(merge)=='idenpa']<-'pais'
merge$wave <- as.numeric(merge$wave)
merge$wave <- ifelse(merge$wave %% 2 == 1, merge$wave-1,merge$wave)
merge <- merge %>% filter(pais!='Spain')
levels(merge$pais)[levels(merge$pais) == "Dominican Rep."] <- "Dominican Republic"
levels(merge$pais)[levels(merge$pais) == "Spain"] <- NULL
levels(merge$pais)[levels(merge$pais) == "Spain"]
levels(merge$pais)[levels(merge$pais) == "Spain"] <- NULL
levels(merge$pais)[levels(merge$pais) == "Spain"]
?droplevels()
levels(merge$pais)[levels(merge$pais) == "Spain"] <- NA
levels(merge$pais)[levels(merge$pais) == "Spain"]
# Especifica las columnas para excluir
exclude_cols = c("wave", "pais")
# Estandariza los datos
prom_wave_latin <- standardize_data(merge, exclude_cols)
prom_wave_latin <- prom_wave_latin %>% group_by(wave,pais) %>% summarise_if(is.numeric, mean, na.rm = TRUE) %>% ungroup()
lapop_latin <- sort(as.vector(unique(c(unique(prom$pais),unique(merge$pais)))))
df_complete <- expand_grid(wave = unique(prom_wave_latin$wave),
pais = lapop_latin)
for_table <- merge(df_complete, prom_wave_latin, by = c("wave", "pais"), all = TRUE)
for_table <- for_table[order(for_table$pais),]
for_table <- prom_wave_latin
levels(for_table$pais) <- c(levels(for_table$pais),setdiff(lapop_latin,levels(for_table$pais)))
tabla <- table(for_table$pais, for_table$wave)
tabla <- tabla>0
tabla <- tabla%>%
as.data.frame.matrix()
tabla <- tabla %>%
filter(!rowSums(tabla) == 0)
tabla<-tabla[sort(rownames(tabla)),]%>%
rbind(colSums(.)) %>%
rownames_to_column("País")
tabla$País[nrow(tabla)] <- "Total"
for (col in names(tabla)) {
tabla[[col]] <- ifelse(tabla[[col]] == 1, '✅ ', tabla[[col]])
}
for (col in names(tabla)) {
tabla[[col]] <- ifelse(tabla[[col]] == 0, '❌', tabla[[col]])
}
tabla%>%
flextable() %>%
theme_alafoli()%>%
autofit()
tabla <- table(for_table$pais, for_table$wave)
tabla
tabla <- tabla>0
tabla
tabla <- tabla%>%
as.data.frame.matrix()
tabla
tabla<-tabla[sort(rownames(tabla)),]%>%
rbind(colSums(.)) %>%
rownames_to_column("País")
tabla$País[nrow(tabla)] <- "Total"
for (col in names(tabla)) {
tabla[[col]] <- ifelse(tabla[[col]] == 1, '✅ ', tabla[[col]])
}
for (col in names(tabla)) {
tabla[[col]] <- ifelse(tabla[[col]] == 0, '❌', tabla[[col]])
}
tabla%>%
flextable() %>%
theme_alafoli()%>%
autofit()
tabla%>%
flextable() %>%
theme_alafoli()%>%
autofit() %>%
bold(i = 26)
print(dfSummary(merge %>% mutate(wave=as.numeric(wave)),
headings=FALSE,
method = 'render',
style = "grid",
plain.ascii = FALSE,
tmp.img.dir = 'tmp',
varnumbers = FALSE,
silent= TRUE,  split.by = NULL))
merge$dif_padres <- merge$riquezapersonal - merge$riquezapadres
merge$dif_padres
merge$dif_hijos <- merge$riquezahijos - merge$riquezapersonal
prom_wave_latin <- prom_wave_latin %>%
mutate(pais = droplevels(pais)) %>%
as_tibble()%>%
complete(wave,pais)
prom_wave_latin
frq(prom_wave_latin$pais)
prom_wave_latin[order(prom_wave_latin$pais),] %>%
head(16)%>%
mutate(wave = as.factor(wave))%>%
# replace(is.na(prom), "NA")%>%
flextable() %>%
theme_alafoli() %>%
autofit() %>%
# colformat_num(big.mark = "",decimal.mark = ",", digits = 1) %>%
colformat_double(big.mark = "",decimal.mark = ",", digits = 1,
na_str = "NA",
nan_str = "NA",)%>%
align(align = "center", part = "all") %>%
bg(i = ~ is.na(riquezapersonal) ,j=~ riquezapersonal, bg = "#E73C6D") %>%
color(i = ~ is.na(riquezapersonal),j=~ riquezapersonal, color='white')%>%
bg(i = ~ is.na(riquezapadres) ,j=~ riquezapadres, bg = "#E73C6D") %>%
color(i = ~ is.na(riquezapadres),j=~ riquezapadres, color='white')%>%
bg(i = ~ is.na(riquezahijos) ,j=~ riquezahijos, bg = "#E73C6D") %>%
color(i = ~ is.na(riquezahijos),j=~ riquezahijos, color='white')%>%
bg(i = ~ is.na(apoyodemocracia) ,j=~ apoyodemocracia, bg = "#E73C6D") %>%
color(i = ~ is.na(apoyodemocracia),j=~ apoyodemocracia, color='white')%>%
bg(i = ~ is.na(hablarpolitica) ,j=~ hablarpolitica, bg = "#E73C6D") %>%
color(i = ~ is.na(hablarpolitica),j=~ hablarpolitica, color='white')%>%
bg(i = ~ is.na(firmadopeticion) ,j=~ firmadopeticion, bg = "#E73C6D") %>%
color(i = ~ is.na(firmadopeticion),j=~ firmadopeticion, color='white')%>%
bg(i = ~ is.na(justiciaingresoriqueza) ,j=~ justiciaingresoriqueza, bg = "#E73C6D") %>%
color(i = ~ is.na(justiciaingresoriqueza),j=~ justiciaingresoriqueza, color='white')%>%
bg(i = ~ is.na(dif_hijos) ,j=~ dif_hijos, bg = "#E73C6D") %>%
color(i = ~ is.na(dif_hijos),j=~ dif_hijos, color='white')%>%
bg(i = ~ is.na(dif_padres) ,j=~ dif_padres, bg = "#E73C6D") %>%
color(i = ~ is.na(dif_padres),j=~ dif_padres, color='white')%>%
bg(i = ~ is.na(convencerpolitica) ,j=~ convencerpolitica, bg = "#E73C6D") %>%
color(i = ~ is.na(convencerpolitica),j=~ convencerpolitica, color='white')
prom_wave_latin$dif_padres <- prom_wave_latin$riquezapersonal - prom_wave_latin$riquezapadres
prom_wave_latin$dif_hijos <- prom_wave_latin$riquezahijos - prom_wave_latin$riquezapersonal
print(dfSummary(merge %>% select(dif_padres,dif_hijos),
headings=FALSE,
method = 'render',
style = "grid",
plain.ascii = FALSE,
tmp.img.dir = 'tmp',
varnumbers = FALSE,
silent= TRUE,  split.by = NULL))
prom_wave_latin[order(prom_wave_latin$pais),] %>%
head(16)%>%
mutate(wave = as.factor(wave))%>%
# replace(is.na(prom), "NA")%>%
flextable() %>%
theme_alafoli() %>%
autofit() %>%
# colformat_num(big.mark = "",decimal.mark = ",", digits = 1) %>%
colformat_double(big.mark = "",decimal.mark = ",", digits = 1,
na_str = "NA",
nan_str = "NA",)%>%
align(align = "center", part = "all") %>%
bg(i = ~ is.na(riquezapersonal) ,j=~ riquezapersonal, bg = "#E73C6D") %>%
color(i = ~ is.na(riquezapersonal),j=~ riquezapersonal, color='white')%>%
bg(i = ~ is.na(riquezapadres) ,j=~ riquezapadres, bg = "#E73C6D") %>%
color(i = ~ is.na(riquezapadres),j=~ riquezapadres, color='white')%>%
bg(i = ~ is.na(riquezahijos) ,j=~ riquezahijos, bg = "#E73C6D") %>%
color(i = ~ is.na(riquezahijos),j=~ riquezahijos, color='white')%>%
bg(i = ~ is.na(apoyodemocracia) ,j=~ apoyodemocracia, bg = "#E73C6D") %>%
color(i = ~ is.na(apoyodemocracia),j=~ apoyodemocracia, color='white')%>%
bg(i = ~ is.na(hablarpolitica) ,j=~ hablarpolitica, bg = "#E73C6D") %>%
color(i = ~ is.na(hablarpolitica),j=~ hablarpolitica, color='white')%>%
bg(i = ~ is.na(firmadopeticion) ,j=~ firmadopeticion, bg = "#E73C6D") %>%
color(i = ~ is.na(firmadopeticion),j=~ firmadopeticion, color='white')%>%
bg(i = ~ is.na(justiciaingresoriqueza) ,j=~ justiciaingresoriqueza, bg = "#E73C6D") %>%
color(i = ~ is.na(justiciaingresoriqueza),j=~ justiciaingresoriqueza, color='white')%>%
bg(i = ~ is.na(dif_hijos) ,j=~ dif_hijos, bg = "#E73C6D") %>%
color(i = ~ is.na(dif_hijos),j=~ dif_hijos, color='white')%>%
bg(i = ~ is.na(dif_padres) ,j=~ dif_padres, bg = "#E73C6D") %>%
color(i = ~ is.na(dif_padres),j=~ dif_padres, color='white')%>%
bg(i = ~ is.na(convencerpolitica) ,j=~ convencerpolitica, bg = "#E73C6D") %>%
color(i = ~ is.na(convencerpolitica),j=~ convencerpolitica, color='white')
impute_data <- function(df, var) {
df %>%
group_by(pais) %>%
mutate(
temp = ifelse(is.na(!!sym(var)), lag(!!sym(var), 1), !!sym(var)),
temp = ifelse(is.na(temp), lag(temp, 1), temp),
temp = ifelse(is.na(temp), lag(temp, 1), temp),
temp = ifelse(is.na(temp), lead(temp, 1), temp),
temp = ifelse(is.na(temp), lead(temp, 1), temp),
temp = ifelse(is.na(temp), lead(temp, 1), temp),
!!var := ifelse(is.na(!!sym(var)), temp, !!sym(var))
) %>%
select(-temp) -> df
return(df)
}
numeric_vars <- names(prom_wave_latin)[sapply(prom_wave_latin, is.numeric)]
numeric_vars <- setdiff(numeric_vars, "wave")
for(var in numeric_vars){
prom_wave_latin <- impute_data(prom_wave_latin, var)
}
prom_wave_latin[order(prom_wave_latin$pais),] %>%
head(16)%>%
mutate(wave = as.factor(wave))%>%
# replace(is.na(prom), "NA")%>%
flextable() %>%
theme_alafoli() %>%
autofit() %>%
# colformat_num(big.mark = "",decimal.mark = ",", digits = 1) %>%
align(align = "center", part = "all") %>%
colformat_double(big.mark = "",decimal.mark = ",", digits = 1,
na_str = "NA",
nan_str = "NA",) %>%
bg(i = c(6:7,14:15) ,j=~ riquezapersonal, bg = "#66B16A") %>%
color(i = c(6:7,14:15),j=~ riquezapersonal, color='white')%>%
bg(i = c(6:7,14:15) ,j=~ riquezapadres, bg = "#66B16A") %>%
color(i = c(6:7,14:15),j=~ riquezapadres, color='white')%>%
bg(i = c(6:7,14:15) ,j=~ riquezahijos, bg = "#66B16A") %>%
color(i = c(6:7,14:15),j=~ riquezahijos, color='white')%>%
# bg(i = c(8) ,j=~ apoyodemocracia, bg = "#66B16A") %>%
# color(i = c(8),j=~ apoyodemocracia, color='white')%>%
bg(i = c(3:4,7:8,11:12,15:16) ,j=~ hablarpolitica, bg = "#66B16A") %>%
color(i = c(3:4,7:8,11:12,15:16),j=~ hablarpolitica, color='white')%>%
bg(i = c(3:4,7:8,11:12,15:16) ,j=~ convencerpolitica, bg = "#66B16A") %>%
color(i = c(3:4,7:8,11:12,15:16),j=~ convencerpolitica, color='white') %>%
bg(i = c(4,7:8,12,15:16) ,j=~ firmadopeticion, bg = "#66B16A") %>%
color(i = c(4,7:8,12,15:16),j=~ firmadopeticion, color='white') %>%
bg(i = c(1,9) ,j=~ justiciaingresoriqueza, bg = "#66B16A") %>%
color(i = c(1,9),j=~ justiciaingresoriqueza, color='white') %>%
bg(i = c(6:7,14:15) ,j=~ dif_padres, bg = "#66B16A") %>%
color(i = c(6:7,14:15),j=~ dif_padres, color='white') %>%
bg(i = c(6:7,14:15) ,j=~ justiciaingresoriqueza, bg = "#66B16A") %>%
color(i = c(6:7,14:15),j=~ justiciaingresoriqueza, color='white')
data_latinobarometro <- prom_wave_latin
saveRDS(data_latinobarometro,"data_latinobarometro.rds")
prop_casos_perdidos <- function(variable) {
prop <- round(sum(is.na(variable)) / length(variable) *100,1)
return(prop)
}
# Crear la tabla de proporción de casos perdidos por variable
tabla_prop_perdidos <- data.frame(
Variable = colnames(prom_wave_latin),
`Prop NA` = paste0(sapply(prom_wave_latin, prop_casos_perdidos),"%")
) %>%
flextable()
tabla_prop_perdidos
load("data/WVS/WVS_TimeSeries_4_0.rdata")
WVS <- data1 ; rm(data1)
columnas <- names(label_to_colnames(WVS))
data <- WVS %>% select(COW_NUM,S020,E035,G006,H001)
# data <- WVS[c(6,23,
#               # 78,80,94:111,115,116,194,
#               407,
#               # 533,
#               804,914)]
respuestas <- to_label(data)
data$COW_NUM<-respuestas$COW_NUM
data <- data %>%
setNames(c("pais","year","igualdadingresos","orgullonacional","seguridadbarrio"))
data$orgullonacional[data$orgullonacional<1] <- NA
data$orgullonacional <- 5-data$orgullonacional
data$igualdadingresos[data$igualdadingresos<1] <- NA
data$igualdadingresos <- 11-data$igualdadingresos
#Datos desde 2010
data$seguridadbarrio[data$seguridadbarrio<1] <- NA
data$seguridadbarrio <- 5-data$seguridadbarrio
data <- data %>%
filter(pais %in% c("Argentina", "Bolivia", "Brazil", "Canada",
"Chile", "Colombia", "Dominican Republic",
"Ecuador","El Salvador", "Guatemala", "Haiti",
"Mexico", "Nicaragua","Trinidad and Tobago",
"Peru","Puerto Rico", "United States of America",
"Uruguay","Venezuela")) %>%
filter(year > 2003)
# Especifica las columnas para excluir
exclude_cols = c("year", "pais")
# Estandariza los datos
data <- standardize_data(data, exclude_cols)
data$wave <- ifelse(data$year %% 2 == 1,data$year-1,data$year)
data$wave[data$wave==2022] <- 2020
prom_wave_wvs <- data %>% select(-year) %>% group_by(wave,pais) %>% summarise_if(is.numeric, mean, na.rm = TRUE)
prom_wave_wvs$pais
unique(prom_wave_wvs$pais)
